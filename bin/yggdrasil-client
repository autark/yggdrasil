#!/usr/bin/perl

use strict;
use warnings;

BEGIN { our $VERSION = 0.05 }

use FindBin qw($Bin);
use lib qq($Bin/../lib);

use Yggdrasil;

use Yggdrasil::Common::Config;
use Yggdrasil::Common::CommandLine ("foo=s", "bar:s");

my $ygg     = Yggdrasil->new();
my $cmdline = Yggdrasil::Common::CommandLine->new();
my $c       = Yggdrasil::Common::Config->new();
my $status  = $ygg->get_status();

my $label  = $cmdline->get('label') || 'default';
my $config = $c->get($label);
die "No such label as $label\n" unless $config;

my $uname = $cmdline->get( 'username' ) || $config->get( 'authuser' ) || (getpwuid($>))[0];
my $upass = $cmdline->get( 'password' ) || $config->get( 'authpass' ) || $cmdline->read_password();

$ygg->connect(
	      daemonhost => $config->get( 'daemonhost' ),
	      daemonport => $config->get( 'daemonport' ),
	     );

&status();

$ygg->login(
	    username => $uname,
	    password => $upass,
	    protocol => 'XML',
	   );

&status();

print "Available protocols:\n";
for my $p ($ygg->{client}->protocols()) {
    print " - $p\n";
}
print "\n";

print "Host\n";
$ygg->{client}->{protocol}->get_entity( 'Host' );

print "nommo\n";
$ygg->{client}->{protocol}->get_instance( 'Host', 'nommo' );

print "Host:ip\n";
$ygg->{client}->{protocol}->get_property( 'Host', 'ip' );

print "Host:uname\n";
$ygg->{client}->{protocol}->define_property( 'Host', 'uname' );

print "Host -> nommo -> ip\n";
$ygg->{client}->{protocol}->get_value( 'Host', 'ip', 'nommo' );

print "Host -> nommo -> ip -> 129.240.222.1\n";
$ygg->{client}->{protocol}->set_value( 'Host', 'ip', 'nommo', '129.240.222.1' );

print "uptime\n";
$ygg->{client}->{protocol}->uptime();

print "whoami\n";
$ygg->{client}->{protocol}->whoami();


sub status {
    print $status->status(), " : ", $status->message(), "\n";
    exit unless $status->OK();
}
 
