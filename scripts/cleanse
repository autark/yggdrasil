#!/usr/bin/perl

use strict;
use warnings;

BEGIN { our $VERSION = '0.03' };

use FindBin qw($Bin);
use lib qq($Bin/../lib);

use DBI;
use Yggdrasil::Common::CommandLine;
use Yggdrasil::Common::Config;

my $cmdline = Yggdrasil::Common::CommandLine->new();
my $label   = $cmdline->get('label') || 'default';

my $c = Yggdrasil::Common::Config->new();
my $config = $c->get($label);

unless ($config) {
    $config = $c->get('ENV');
    die "No such label as $label and falling back to ENV failed\n"
	unless $config->get( 'engineuser' );
}

my ($user, $pass, $host, $port, $db, $engine) =
  ($config->get( 'engineuser' ), $config->get( 'enginepassword' ), $config->get( 'enginehost' ),
   $config->get( 'engineport' ), $config->get( 'enginedb' ), $config->get( 'enginetype' ));



my $dbh = DBI->connect( "DBI:$engine:database=$db;host=$host;port=$port", $user, $pass );
unless( $dbh ) {
    die "No database?\n";
}


my $query = 'show tables';
$query = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'" if $engine eq 'Pg';

my $sth = $dbh->prepare( $query );
$sth->execute();

my $tables =  $sth->fetchall_arrayref();
for my $t ( @$tables ) {
    print "Dropping $t->[0]\n";
    $dbh->do( "DROP TABLE $t->[0] CASCADE" );
}
