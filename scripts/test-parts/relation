#!/usr/bin/perl -l

use strict;
use warnings;

use Getopt::Long;

use FindBin qw($Bin);
use lib qq($Bin/../../lib);

use Yggdrasil;

my ($user, $password, $host, $port, $db, $engine, $mapper) =
  ($ENV{YGG_USER}, $ENV{YGG_PASSWORD}, $ENV{YGG_HOST}, $ENV{YGG_PORT}, $ENV{YGG_DB}, $ENV{YGG_ENGINE}, undef);

GetOptions(
	   "user=s"       => \$user,
	   "engine=s"     => \$engine,
	   "password=s"   => \$password,
	   "host=s"       => \$host,
	   "database=s"   => \$db,
	   "engine=s"     => \$engine,
	   "port=s"       => \$port,
	   "mapper=s"     => \$mapper,
	  );

new Yggdrasil(
	      user      => $user,
	      password  => $password,
	      host      => $host,
	      port      => $port,
	      db        => $db,
	      engine    => $engine,
	      namespace => 'Ygg',
	      mapper    => $mapper,
	      admin     => 1
	     );

print "$user\@$host ($db / $engine)\n";

my $person = define Yggdrasil::Entity "Person";
my $node   = define Yggdrasil::Entity "Node";
my $room   = define Yggdrasil::Entity "Room";

my $pname = define $person 'name';
my $nname = define $node 'ip';
my $ruse  = define $room 'use';

my $bob   = Ygg::Person->new( "bob" );
my $alice = Ygg::Person->new( "alice" );
my $nommo = Ygg::Node->new( 'nommo' );
my $b701  = Ygg::Room->new( 'B701' );

$bob->property( name => "Bob b." );
$alice->property( name => "Alice down the Hole" );
$nommo->property( ip => '129.240.222.179');
$b701->property( use => 'Hacklab' );

my $p2p = define Yggdrasil::Relation "Person", "Person";
my $n2p = define Yggdrasil::Relation "Node", "Person";
my $n2r = define Yggdrasil::Relation "Node", "Room";

$p2p->link($bob, $alice);
$n2p->link($nommo, $bob);
$n2r->link($nommo, $b701);

foreach my $r ( $bob->fetch_related("Person") ) {
    print "Bob is related to ", pprop($r, "name"), "\n";
}

foreach my $r ( $bob->fetch_related("Node") ) {
    print "Bob is related to ", pprop($r, "ip"), "\n";
}

foreach my $r ( $bob->fetch_related("Room") ) {
    print "Bob is related to ", pprop($r, "use"), "\n";
}

print "Unlinking...\n";
$n2p->unlink( $nommo, $bob );

foreach my $r ( $bob->fetch_related("Node") ) {
    print "Bob is related to ", pprop($r, "ip"), "\n";
}

foreach my $r ( $bob->fetch_related("Room") ) {
    print "Bob is related to ", pprop($r, "use"), "\n";
}

sub pprop {
    my $instance = shift;
    my $property = shift;

    my $value = $instance->property($property);
    return join("", $instance->id(), ".", $property, ": ", defined $value ? $value : "NULL" );
}
